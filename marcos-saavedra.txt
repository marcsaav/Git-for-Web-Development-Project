finished codepen: https://codepen.io/marcsaav/pen/gOrxNEY?editors=1100

    1. What is Semantic HTML?
     HTML used to give meaning to my mark up
    2. What is HTML used for?
     To provide context in which to put content
    3. What is an attribute and where do we put it?
     An attribute is a modifier for an html tag and is put in the beginning tag
    4. What is the h1 tag used for? How many times should I use it on a page?
     The h1 tag is used to provide a title heading to the page, and should be used only once.
    5. Name two tags that have required attributes
     The img tag and the anchor tag
    6. What do we put in the head of our HTML document?
     The metadata for our page, including the title, styles, scripts and character set
    7. What is an id?
     An id is a selector attribute
    8. What elements can I add an id to?
     All elements but <base>, <head>, <html>, <meta>, <script>, <style>, and <title>
    9. How many times can I use the same id on a page?
     Just once
    10. What is a class?
     A class is another selector attribute
    11. What elements can I add a class to?
     Any element
    12. How many times can I use the same class on a page?
     As many as you like
    13. How do I get my link to open in a new tab?
     <a href="" target= _blank> </a>
    14. What is the alt attribute in the image tag used for?
     For when an image doesn't load, and the alt attribute is used to provide context to the content
    15. How do I reference an id?
     #id
    16. What is the difference between a section and a div
     A section provides context for the browser in a markup, while a div does not
    17. What is CSS used for?
     To style a web page
    18. How to we select an element? Example - every h2 on the page
     h2 {}
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
     A class is used to group together various elements, while an id is used solely for one. One might use an id
     for a title, or something used only once, while using a class for elements within that section.
    20. How do we select classes in CSS?
     .class {}
    21. How do we select a p element with a single class of “human””?
     p.human {}
    22. What is a parent child selector? When would this be useful?
     Selecting an element within an element, useful to provide specificity in your css
    23. How do you select all links within a div with the class of sidebar?
     div.sidebar a {}
    24. What is a pseudo selector?
     A selector that selects elements in a specific state, e.g. when a mouse is hovered over them
    25. What do we use the change the spacing between lines?
     the line-height attribute
    26. What do we use to change the spacing between letters?
     the letter-spacing css property
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
     Selecting everything and using text-transform values; capitalize, uppercase, and lowercase
    28. How do I add a 1px border around my div that is dotted and black?
     div {
         border: 1px dotted black;
     }
    29. How do I select everything on the page?
     .body {}  or .container{}/your highest division
    30. How do I write a comment in CSS?
     /* */
    31. How do I find out what file I am in, when I am using the command line?
     pwd
    32. Using the command line - how do I see a list of files/folders in my current folder?
     ls
    33. How do I remove a file via the command line? Why do I have to be careful with this?
     git rm , and you should be careful because there's no warning and it completely deletes
     your file off your computer
    34. Why should I use version control?
     Provides easy access to previous version of your code, useful when/if your computer crashes
     or your code stops working for some reason.
    35. How often should I commit to github?
     As often as possible, to always keep up-to-date versions of your code
    36. What is the command we would use to push our repo up to github?
     git push -u origin ''
    37. Walk me through Lambda's git flow.
     -First fork lambda's repository to your own.
     -Then go to settings/manage access/invite collaborators and invite your TL
     -In the CLI, clone the repository to your own machine, by copying the url provided in the code branch-down
     -Branch the repository, making sure it's your copy
     -When finished making changes to code, go back to CLI,
     add, commit, and push your branch up to your github repository
     -Go back to github, on your forked copy, and create a pull request, making sure it's against your own copy
     as well as adding your TL as a reviewer, and not merging your pull request.

Stretch Questions

    1. What is the difference between an inline element and a block element?
     Inline elements are usually put inside block elements, but the vice versa can't happen.
     Also, block elements usually cause line breaks to occur, while inline elements do not force a new line to begin.
    2. What happens when an element is positioned absolutely?
     That element is out of the document flow, not taking up space like static or relative values. It is positioned absolutely
     with reference to the closest parent element that has a relative position value.
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width?
     The margin and padding properties could be set to 0
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
    Block Elements-
     <section>
     <header>
     <div>
    Inline Elements-
     <span>
     <strong>
    Block-inline Element-
     <p>
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them?
     The box model describes the css properties surrounding an html element; padding, border, and margin. In order to make all elements work together within a page,
     you must calculate the widths of not just the content area, but the padding, border, and margin as well. From there you can allocate elements to different positions
     using their total widths.